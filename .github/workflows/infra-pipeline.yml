name: Deploy Project with IaC

on:
  push:
    branches:
      - main
    paths:
      - "infra/**"  # Only trigger if files in the infra directory are changed
      - ".github/workflows/infra-pipeline.yml"  # Trigger on changes to this workflow file


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Google Cloud SDK with the `ci-cd-pipeline` service account
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.CI_CD_PIPELINE_SERVICE_KEY }}

    # Create sa-key.json for Authentication (using CI_CD_PIPELINE_SERVICE_KEY)
    - name: create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.3
      with:
        name: "infra/sa-key.json"
        json: ${{ secrets.CI_CD_PIPELINE_SERVICE_KEY }}
   

    - name: Terraform Init
      run: terraform -chdir=infra init 
      env:
        GOOGLE_APPLICATION_CREDENTIALS: sa-key.json
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
        TF_VAR_gcp_credentials: ${{ secrets.CI_CD_PIPELINE_SERVICE_KEY }}



    # Terraform Apply
    - name: Terraform Apply 
      run: terraform -chdir=infra apply -auto-approve #-backend-config="bucket=${{ matrix.target_environment.k8s-proj-state-file }}" -backend-config="location=US" -backend-config="impersonate_service_account=ci-cd-pipeline@k8s-proj-439420.iam.gserviceaccount.com"
      env:
        GOOGLE_APPLICATION_CREDENTIALS: sa-key.json
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
        TF_VAR_gcp_credentials: ${{ secrets.CI_CD_PIPELINE_SERVICE_KEY }}




    # Retrieve MongoDB IP after infra deployment
    - name: Retrieve MongoDB IP
      id: get_mongo_ip
      run: MONGO_IP=$(terraform -chdir=infra output -raw mongo_ip) echo "MONGODB_URI=mongodb://$MONGO_IP:27017" >> $GITHUB_ENV
      env:
        GOOGLE_APPLICATION_CREDENTIALS: sa-key.json